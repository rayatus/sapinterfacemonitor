*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 09.02.2019 at 23:11:40
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZVINTFMONITOR...................................*
FORM GET_DATA_ZVINTFMONITOR.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZINTFMONITOR010 WHERE
(VIM_WHERETAB) .
    CLEAR ZVINTFMONITOR .
ZVINTFMONITOR-INTFID =
ZINTFMONITOR010-INTFID .
ZVINTFMONITOR-CLSNAME =
ZINTFMONITOR010-CLSNAME .
ZVINTFMONITOR-ACTIVE =
ZINTFMONITOR010-ACTIVE .
ZVINTFMONITOR-INBOUT =
ZINTFMONITOR010-INBOUT .
    SELECT SINGLE * FROM ZINTFMONITOR011 WHERE
INTFID = ZINTFMONITOR010-INTFID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVINTFMONITOR-XINTFID =
ZINTFMONITOR011-XINTFID .
    ENDIF.
    SELECT SINGLE * FROM SEOCLASS WHERE
CLSNAME = ZINTFMONITOR010-CLSNAME .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM SEOCLASSTX WHERE
CLSNAME = SEOCLASS-CLSNAME AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZVINTFMONITOR-DESCRIPT =
SEOCLASSTX-DESCRIPT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZVINTFMONITOR.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVINTFMONITOR .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVINTFMONITOR.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVINTFMONITOR-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZINTFMONITOR010 WHERE
  INTFID = ZVINTFMONITOR-INTFID .
    IF SY-SUBRC = 0.
    DELETE ZINTFMONITOR010 .
    ENDIF.
    DELETE FROM ZINTFMONITOR011 WHERE
    INTFID = ZINTFMONITOR010-INTFID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZINTFMONITOR010 WHERE
  INTFID = ZVINTFMONITOR-INTFID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZINTFMONITOR010.
    ENDIF.
ZINTFMONITOR010-INTFID =
ZVINTFMONITOR-INTFID .
ZINTFMONITOR010-CLSNAME =
ZVINTFMONITOR-CLSNAME .
ZINTFMONITOR010-ACTIVE =
ZVINTFMONITOR-ACTIVE .
ZINTFMONITOR010-INBOUT =
ZVINTFMONITOR-INBOUT .
    IF SY-SUBRC = 0.
    UPDATE ZINTFMONITOR010 ##WARN_OK.
    ELSE.
    INSERT ZINTFMONITOR010 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZINTFMONITOR011 WHERE
    INTFID = ZINTFMONITOR010-INTFID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZINTFMONITOR011.
ZINTFMONITOR011-INTFID =
ZINTFMONITOR010-INTFID .
ZINTFMONITOR011-SPRAS =
SY-LANGU .
      ENDIF.
ZINTFMONITOR011-XINTFID =
ZVINTFMONITOR-XINTFID .
    IF SY-SUBRC = 0.
    UPDATE ZINTFMONITOR011 ##WARN_OK.
    ELSE.
    INSERT ZINTFMONITOR011 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVINTFMONITOR-UPD_FLAG,
STATUS_ZVINTFMONITOR-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVINTFMONITOR.
  SELECT SINGLE * FROM ZINTFMONITOR010 WHERE
INTFID = ZVINTFMONITOR-INTFID .
ZVINTFMONITOR-INTFID =
ZINTFMONITOR010-INTFID .
ZVINTFMONITOR-CLSNAME =
ZINTFMONITOR010-CLSNAME .
ZVINTFMONITOR-ACTIVE =
ZINTFMONITOR010-ACTIVE .
ZVINTFMONITOR-INBOUT =
ZINTFMONITOR010-INBOUT .
    SELECT SINGLE * FROM ZINTFMONITOR011 WHERE
INTFID = ZINTFMONITOR010-INTFID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVINTFMONITOR-XINTFID =
ZINTFMONITOR011-XINTFID .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVINTFMONITOR-XINTFID .
    ENDIF.
    SELECT SINGLE * FROM SEOCLASS WHERE
CLSNAME = ZINTFMONITOR010-CLSNAME .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM SEOCLASSTX WHERE
CLSNAME = SEOCLASS-CLSNAME AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZVINTFMONITOR-DESCRIPT =
SEOCLASSTX-DESCRIPT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZVINTFMONITOR-DESCRIPT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVINTFMONITOR-DESCRIPT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVINTFMONITOR USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVINTFMONITOR-INTFID TO
ZINTFMONITOR010-INTFID .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZINTFMONITOR010'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZINTFMONITOR010 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZINTFMONITOR010'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZINTFMONITOR010-INTFID TO
ZINTFMONITOR011-INTFID .
MOVE SY-LANGU TO
ZINTFMONITOR011-SPRAS .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZINTFMONITOR011'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZINTFMONITOR011 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZINTFMONITOR011'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZVINTFMONITOR USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZINTFMONITOR010-INTFID =
ZVINTFMONITOR-INTFID .
ZINTFMONITOR010-CLSNAME =
ZVINTFMONITOR-CLSNAME .
ZINTFMONITOR010-ACTIVE =
ZVINTFMONITOR-ACTIVE .
ZINTFMONITOR010-INBOUT =
ZVINTFMONITOR-INBOUT .
  ZINTFMONITOR011-INTFID =
    ZINTFMONITOR010-INTFID .
  ZINTFMONITOR011-SPRAS =
    SY-LANGU .
ZINTFMONITOR011-XINTFID =
ZVINTFMONITOR-XINTFID .
    SELECT SINGLE * FROM SEOCLASS WHERE
CLSNAME = ZINTFMONITOR010-CLSNAME .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM SEOCLASSTX WHERE
CLSNAME = SEOCLASS-CLSNAME AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZVINTFMONITOR-DESCRIPT =
SEOCLASSTX-DESCRIPT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZVINTFMONITOR-DESCRIPT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVINTFMONITOR-DESCRIPT .
    ENDIF.
ENDFORM.
*...processing: ZVINTFMONITORPAR................................*
FORM GET_DATA_ZVINTFMONITORPAR.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZINTFMONITOR012 WHERE
(VIM_WHERETAB) .
    CLEAR ZVINTFMONITORPAR .
ZVINTFMONITORPAR-INTFID =
ZINTFMONITOR012-INTFID .
ZVINTFMONITORPAR-PARAM =
ZINTFMONITOR012-PARAM .
ZVINTFMONITORPAR-PARAMTYPE =
ZINTFMONITOR012-PARAMTYPE .
ZVINTFMONITORPAR-DATATYPE =
ZINTFMONITOR012-DATATYPE .
    SELECT SINGLE * FROM ZINTFMONITOR010 WHERE
INTFID = ZINTFMONITOR012-INTFID .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZINTFMONITOR011 WHERE
INTFID = ZINTFMONITOR010-INTFID AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZVINTFMONITORPAR-XINTFID =
ZINTFMONITOR011-XINTFID .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM ZINTFMONITOR013 WHERE
INTFID = ZINTFMONITOR012-INTFID AND
PARAM = ZINTFMONITOR012-PARAM AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVINTFMONITORPAR-XPARAM =
ZINTFMONITOR013-XPARAM .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVINTFMONITORPAR.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVINTFMONITORPAR .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVINTFMONITORPAR.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVINTFMONITORPAR-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZINTFMONITOR012 WHERE
  INTFID = ZVINTFMONITORPAR-INTFID AND
  PARAM = ZVINTFMONITORPAR-PARAM .
    IF SY-SUBRC = 0.
    DELETE ZINTFMONITOR012 .
    ENDIF.
    DELETE FROM ZINTFMONITOR013 WHERE
    INTFID = ZINTFMONITOR012-INTFID AND
    PARAM = ZINTFMONITOR012-PARAM .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZINTFMONITOR012 WHERE
  INTFID = ZVINTFMONITORPAR-INTFID AND
  PARAM = ZVINTFMONITORPAR-PARAM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZINTFMONITOR012.
    ENDIF.
ZINTFMONITOR012-INTFID =
ZVINTFMONITORPAR-INTFID .
ZINTFMONITOR012-PARAM =
ZVINTFMONITORPAR-PARAM .
ZINTFMONITOR012-PARAMTYPE =
ZVINTFMONITORPAR-PARAMTYPE .
ZINTFMONITOR012-DATATYPE =
ZVINTFMONITORPAR-DATATYPE .
    IF SY-SUBRC = 0.
    UPDATE ZINTFMONITOR012 ##WARN_OK.
    ELSE.
    INSERT ZINTFMONITOR012 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZINTFMONITOR013 WHERE
    INTFID = ZINTFMONITOR012-INTFID AND
    PARAM = ZINTFMONITOR012-PARAM AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZINTFMONITOR013.
ZINTFMONITOR013-INTFID =
ZINTFMONITOR012-INTFID .
ZINTFMONITOR013-PARAM =
ZINTFMONITOR012-PARAM .
ZINTFMONITOR013-SPRAS =
SY-LANGU .
      ENDIF.
ZINTFMONITOR013-XPARAM =
ZVINTFMONITORPAR-XPARAM .
    IF SY-SUBRC = 0.
    UPDATE ZINTFMONITOR013 ##WARN_OK.
    ELSE.
    INSERT ZINTFMONITOR013 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVINTFMONITORPAR-UPD_FLAG,
STATUS_ZVINTFMONITORPAR-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVINTFMONITORPAR.
  SELECT SINGLE * FROM ZINTFMONITOR012 WHERE
INTFID = ZVINTFMONITORPAR-INTFID AND
PARAM = ZVINTFMONITORPAR-PARAM .
ZVINTFMONITORPAR-INTFID =
ZINTFMONITOR012-INTFID .
ZVINTFMONITORPAR-PARAM =
ZINTFMONITOR012-PARAM .
ZVINTFMONITORPAR-PARAMTYPE =
ZINTFMONITOR012-PARAMTYPE .
ZVINTFMONITORPAR-DATATYPE =
ZINTFMONITOR012-DATATYPE .
    SELECT SINGLE * FROM ZINTFMONITOR010 WHERE
INTFID = ZINTFMONITOR012-INTFID .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZINTFMONITOR011 WHERE
INTFID = ZINTFMONITOR010-INTFID AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZVINTFMONITORPAR-XINTFID =
ZINTFMONITOR011-XINTFID .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZVINTFMONITORPAR-XINTFID .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVINTFMONITORPAR-XINTFID .
    ENDIF.
    SELECT SINGLE * FROM ZINTFMONITOR013 WHERE
INTFID = ZINTFMONITOR012-INTFID AND
PARAM = ZINTFMONITOR012-PARAM AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVINTFMONITORPAR-XPARAM =
ZINTFMONITOR013-XPARAM .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVINTFMONITORPAR-XPARAM .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVINTFMONITORPAR USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVINTFMONITORPAR-INTFID TO
ZINTFMONITOR012-INTFID .
MOVE ZVINTFMONITORPAR-PARAM TO
ZINTFMONITOR012-PARAM .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZINTFMONITOR012'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZINTFMONITOR012 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZINTFMONITOR012'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZINTFMONITOR012-INTFID TO
ZINTFMONITOR013-INTFID .
MOVE ZINTFMONITOR012-PARAM TO
ZINTFMONITOR013-PARAM .
MOVE SY-LANGU TO
ZINTFMONITOR013-SPRAS .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZINTFMONITOR013'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZINTFMONITOR013 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZINTFMONITOR013'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZVINTFMONITORPAR USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZINTFMONITOR012-INTFID =
ZVINTFMONITORPAR-INTFID .
ZINTFMONITOR012-PARAM =
ZVINTFMONITORPAR-PARAM .
ZINTFMONITOR012-PARAMTYPE =
ZVINTFMONITORPAR-PARAMTYPE .
ZINTFMONITOR012-DATATYPE =
ZVINTFMONITORPAR-DATATYPE .
    SELECT SINGLE * FROM ZINTFMONITOR010 WHERE
INTFID = ZINTFMONITOR012-INTFID .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZINTFMONITOR011 WHERE
INTFID = ZINTFMONITOR010-INTFID AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZVINTFMONITORPAR-XINTFID =
ZINTFMONITOR011-XINTFID .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZVINTFMONITORPAR-XINTFID .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVINTFMONITORPAR-XINTFID .
    ENDIF.
ENDFORM.
